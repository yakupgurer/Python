# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'arayuz.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import temasTahmini
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import os
from PyQt5.QtGui import QPixmap


class Ui_arayuzEkran(object):
    def setupUi(self, arayuzEkran):
        arayuzEkran.setObjectName("arayuzEkran")
        arayuzEkran.resize(1031, 868)
        arayuzEkran.setAutoFillBackground(False)
        self.videoSec = QtWidgets.QPushButton(arayuzEkran)
        self.videoSec.setGeometry(QtCore.QRect(410, 70, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(10)
        self.videoSec.setFont(font)
        self.videoSec.setObjectName("videoSec")
        self.temasKontrolYap = QtWidgets.QPushButton(arayuzEkran)
        self.temasKontrolYap.setGeometry(QtCore.QRect(370, 740, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(10)
        self.temasKontrolYap.setFont(font)
        self.temasKontrolYap.setObjectName("temasKontrolYap")
        self.sonucLabel = QtWidgets.QLabel(arayuzEkran)
        self.sonucLabel.setGeometry(QtCore.QRect(420, 790, 261, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.sonucLabel.setFont(font)
        self.sonucLabel.setObjectName("sonucLabel")
        self.label_3 = QtWidgets.QLabel(arayuzEkran)
        self.label_3.setGeometry(QtCore.QRect(60, 150, 211, 21))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(12)
        font.setItalic(False)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(arayuzEkran)
        self.label_4.setGeometry(QtCore.QRect(600, 150, 231, 16))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.potansiyelTemasBelirle = QtWidgets.QPushButton(arayuzEkran)
        self.potansiyelTemasBelirle.setGeometry(QtCore.QRect(710, 70, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(10)
        self.potansiyelTemasBelirle.setFont(font)
        self.potansiyelTemasBelirle.setObjectName("potansiyelTemasBelirle")
        self.resimlerList = QtWidgets.QListWidget(arayuzEkran)
        self.resimlerList.setGeometry(QtCore.QRect(50, 190, 241, 511))
        self.resimlerList.setObjectName("resimlerList")
        item = QtWidgets.QListWidgetItem()
        self.resimlerList.addItem(item)
        self.temasDizinBelirle = QtWidgets.QPushButton(arayuzEkran)
        self.temasDizinBelirle.setGeometry(QtCore.QRect(130, 70, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(10)
        self.temasDizinBelirle.setFont(font)
        self.temasDizinBelirle.setObjectName("temasDizinBelirle")
        self.resimLabel = QtWidgets.QLabel(arayuzEkran)
        self.resimLabel.setGeometry(QtCore.QRect(350, 180, 641, 511))
        self.resimLabel.setText("")
        self.resimLabel.setObjectName("resimLabel")
        self.label = QtWidgets.QLabel(arayuzEkran)
        self.label.setGeometry(QtCore.QRect(560, 380, 241, 71))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.retranslateUi(arayuzEkran)
        QtCore.QMetaObject.connectSlotsByName(arayuzEkran)

    def retranslateUi(self, arayuzEkran):
        _translate = QtCore.QCoreApplication.translate
        arayuzEkran.setWindowTitle(_translate("arayuzEkran", "Futbolcu Temas Tespiti Uygulamasi"))
        self.videoSec.setText(_translate("arayuzEkran", "Video Seç"))
        self.temasKontrolYap.setText(_translate("arayuzEkran", "Temas Kontrolü Yap"))
        self.sonucLabel.setText(_translate("arayuzEkran", "Temas Var/Yok"))
        self.label_3.setText(_translate("arayuzEkran", "Potansiyel Temaslar Listesi"))
        self.label_4.setText(_translate("arayuzEkran", "Potansiyel Temas Görüntüsü"))
        self.potansiyelTemasBelirle.setText(_translate("arayuzEkran", "Potansiyel Temasları Belirle"))
        __sortingEnabled = self.resimlerList.isSortingEnabled()
        self.resimlerList.setSortingEnabled(False)
        item = self.resimlerList.item(0)

        self.resimlerList.setSortingEnabled(__sortingEnabled)
        self.temasDizinBelirle.setText(_translate("arayuzEkran", "Potansiyel Temaslar Dizini Belirle"))

        self.temasDizinBelirle.clicked.connect(self.temasDizinBelirle_fonksiyon)
        self.resimlerList.itemClicked.connect(self.resimGoster)
        self.videoSec.clicked.connect(self.videoSec_fonksiyon)
        self.potansiyelTemasBelirle.clicked.connect(self.potansiyelTemasBelirle_fonksiyon)
        self.temasKontrolYap.clicked.connect(self.temasKontrolYap_fonksiyon)

    def temasDizinBelirle_fonksiyon(self):
            filename = QFileDialog.getExistingDirectory()
            if filename:
                self.path = filename
                self.listeGuncelle()

    def listeGuncelle(self):
            self.resimlerList.clear()
            file_list = os.listdir(self.path)
            self.resimlerList.addItems(file_list)

    def resimGoster(self, item: QListWidgetItem):
            resim_adi = item.text()
            resim_yolu = os.path.join(self.path, resim_adi)
            pixmap = QPixmap(resim_yolu)
            self.resimLabel.setPixmap(pixmap)
            self.resimLabel.setScaledContents(True)

    def videoSec_fonksiyon(self):
            file_dialog = QFileDialog()
            video_path, _ = file_dialog.getOpenFileName(None, "Video Seç", "", "Video Files (*.mp4)")
            if video_path:
                self.video_path = video_path  # video_path özelliği güncellendi

    def potansiyelTemasBelirle_fonksiyon(self):
            if hasattr(self, 'video_path'):
                os.system(f'python temasTespiti.py "{self.video_path}"')  ## temasTespiti.py dosyasını çalıştıracak
            else:
                QMessageBox.warning(None, "Hata", "Video seçilmedi!")

    def temasKontrolYap_fonksiyon(self):

                resim_item = self.resimlerList.currentItem()
                if resim_item:
                    resim_adi = resim_item.text()
                    resim_yolu = os.path.join(self.path, resim_adi)

                    # Tahmini yap
                    prediction = temasTahmini.tahmin_yap(resim_yolu)

                    # Tahmin sonucunu sonucLabel'a aktar
                    self.sonucLabel.setText(prediction)
                else:
                    QMessageBox.warning(None, "Hata", "Resim seçilmedi!")


if __name__ == "__main__":
    import sys
    from PyQt5.QtWidgets import QApplication

    uygulama = QApplication(sys.argv)
    pencere = QDialog()
    ui = Ui_arayuzEkran()
    ui.setupUi(pencere)
    pencere.show()
    sys.exit(uygulama.exec_())  ## uygulamayi çarpı tuşuna atıyoruz çarpı tuşuna bastığı zaman uygulama kapanacak

